name: Tokamak Optimism Publish (Nightly Version)

on:
  push:
    branches:
      - 'main'

jobs:
  l2geth:
    name: Publish L2Geth
    runs-on: ubuntu-latest
    outputs:
      newVersion: ${{ steps.extractver.outputs.VERSION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get version
        id: extractver
        run: |
          echo ::set-output name=VERSION::$(jq -r .version ./l2geth/package.json)
          echo ::set-output name=GITSHA::"$GITHUB_SHA"

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_SECRET }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Publish L2Geth
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./l2geth/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            onthertech/optimism.l2geth:${{ steps.extractver.outputs.GITSHA }}
            onthertech/optimism.l2geth:nightly
            onthertech/optimism.l2geth:nightly-${{ steps.extractver.outputs.VERSION }}

  gas-oracle:
    name: Publish Gas Oracle
    runs-on: ubuntu-latest
    outputs:
      newVersion: ${{ steps.extractver.outputs.VERSION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get version
        id: extractver
        run: |
          echo ::set-output name=VERSION::$(jq -r .version ./gas-oracle/package.json)
          echo ::set-output name=GITSHA::"$GITHUB_SHA"

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_SECRET }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Publish Gas Oracle
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./gas-oracle/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            onthertech/optimism.gas-oracle:${{ steps.extractver.outputs.GITSHA }}
            onthertech/optimism.gas-oracle:nightly
            onthertech/optimism.gas-oracle:nightly-${{ steps.extractver.outputs.VERSION }}

  hardhat-node:
    name: Publish Hardhat Node
    runs-on: ubuntu-latest
    outputs:
      newVersion: ${{ steps.extractver.outputs.VERSION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get version from package.json
        id: extractver
        run: |
          echo ::set-output name=VERSION::$(jq -r .version ./ops/docker/hardhat/package.json)
          echo ::set-output name=GITSHA::"$GITHUB_SHA"

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_SECRET }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Publish Hardhat Node
        uses: docker/build-push-action@v2
        with:
          context: ./ops/docker/hardhat
          file: ./ops/docker/hardhat/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            onthertech/optimism.hardhat-node:${{ steps.extractver.outputs.GITSHA }}
            onthertech/optimism.hardhat-node:nightly
            onthertech/optimism.hardhat-node:nightly-${{ steps.extractver.outputs.VERSION }}

  message-relayer:
    name: Publish Message Relayer
    runs-on: ubuntu-latest
    outputs:
      newVersion: ${{ steps.extractver.outputs.VERSION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Get version
        id: extractver
        run: |
          echo ::set-output name=VERSION::$(jq -r .version ./packages/message-relayer/package.json)
          echo ::set-output name=GITSHA::"$GITHUB_SHA"

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_SECRET }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./ops/docker/Dockerfile.packages
          target: message-relayer
          push: true
          tags: |
            onthertech/optimism.message-relayer:${{ steps.extractver.outputs.GITSHA }}
            onthertech/optimism.message-relayer:nightly
            onthertech/optimism.message-relayer:nightly-${{ steps.extractver.outputs.VERSION }}

  tokamak-message-relayer:
    name: Publish Tokamak Message Relayer
    runs-on: ubuntu-latest
    outputs:
      newVersion: ${{ steps.extractver.outputs.VERSION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Get version
        id: extractver
        run: |
          echo ::set-output name=VERSION::$(jq -r .version ./packages/tokamak/message-relayer/package.json)
          echo ::set-output name=GITSHA::"$GITHUB_SHA"

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_SECRET }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./ops/docker/Dockerfile.packages
          target: tokamak-message-relayer
          push: true
          tags: |
            onthertech/optimism.tokamak-message-relayer:${{ steps.extractver.outputs.GITSHA }}
            onthertech/optimism.tokamak-message-relayer:nightly
            onthertech/optimism.tokamak-message-relayer:nightly-${{ steps.extractver.outputs.VERSION }}

  fault-detector:
    name: Publish Fault Detector
    runs-on: ubuntu-latest
    outputs:
      newVersion: ${{ steps.extractver.outputs.VERSION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Get version
        id: extractver
        run: |
          echo ::set-output name=VERSION::$(jq -r .version ./packages/fault-detector/package.json)
          echo ::set-output name=GITSHA::"$GITHUB_SHA"

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_SECRET }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./ops/docker/Dockerfile.packages
          target: fault-detector
          push: true
          tags: |
            onthertech/optimism.fault-detector:${{ steps.extractver.outputs.GITSHA }}
            onthertech/optimism.fault-detector:nightly
            onthertech/optimism.fault-detector:nightly-${{ steps.extractver.outputs.VERSION }}

  drippie-mon:
    name: Publish Drippie Monitor
    runs-on: ubuntu-latest
    outputs:
      newVersion: ${{ steps.extractver.outputs.VERSION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Get version
        id: extractver
        run: |
          echo ::set-output name=VERSION::$(jq -r .version ./packages/drippie-mon/package.json)
          echo ::set-output name=GITSHA::"$GITHUB_SHA"

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_SECRET }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./ops/docker/Dockerfile.packages
          target: drippie-mon
          push: true
          tags: |
            onthertech/optimism.drippie-mon:${{ steps.extractver.outputs.GITSHA }}
            onthertech/optimism.drippie-mon:nightly
            onthertech/optimism.drippie-mon:nightly-${{ steps.extractver.outputs.VERSION }}

  data-transport-layer:
    name: Publish Data Transport Layer
    runs-on: ubuntu-latest
    outputs:
      newVersion: ${{ steps.extractver.outputs.VERSION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Get version
        id: extractver
        run: |
          echo ::set-output name=VERSION::$(jq -r .version ./packages/data-transport-layer/package.json)
          echo ::set-output name=GITSHA::"$GITHUB_SHA"

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_SECRET }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./ops/docker/Dockerfile.packages
          target: data-transport-layer
          push: true
          tags: |
            onthertech/optimism.data-transport-layer:${{ steps.extractver.outputs.GITSHA }}
            onthertech/optimism.data-transport-layer:nightly
            onthertech/optimism.data-transport-layer:nightly-${{ steps.extractver.outputs.VERSION }}

  contracts:
    name: Publish Deployer
    runs-on: ubuntu-latest
    outputs:
      newVersion: ${{ steps.extractver.outputs.VERSION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Get version
        id: extractver
        run: |
          echo ::set-output name=VERSION::$(jq -r .version ./packages/contracts/package.json)
          echo ::set-output name=GITSHA::"$GITHUB_SHA"

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_SECRET }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./ops/docker/Dockerfile.packages
          target: deployer
          push: true
          tags: |
            onthertech/optimism.deployer:${{ steps.extractver.outputs.GITSHA }}
            onthertech/optimism.deployer:nightly
            onthertech/optimism.deployer:nightly-${{ steps.extractver.outputs.VERSION }}

  integration_tests:
    name: Publish Integration tests
    runs-on: ubuntu-latest
    outputs:
      newVersion: ${{ steps.extractver.outputs.VERSION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Get version
        id: extractver
        run: |
          echo ::set-output name=VERSION::$(jq -r .version ./integration-tests/package.json)
          echo ::set-output name=GITSHA::"$GITHUB_SHA"

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_SECRET }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./ops/docker/Dockerfile.packages
          target: integration-tests
          push: true
          tags: |
            onthertech/optimism.integration-tests:${{ steps.extractver.outputs.GITSHA }}
            onthertech/optimism.integration-tests:nightly
            onthertech/optimism.integration-tests:nightly-${{ steps.extractver.outputs.VERSION }}

  replica-healthcheck:
    name: Publish Replica Healthcheck
    runs-on: ubuntu-latest
    outputs:
      newVersion: ${{ steps.extractver.outputs.VERSION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Get version
        id: extractver
        run: |
          echo ::set-output name=VERSION::$(jq -r .version ./packages/replica-healthcheck/package.json)
          echo ::set-output name=GITSHA::"$GITHUB_SHA"

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_SECRET }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./ops/docker/Dockerfile.packages
          target: replica-healthcheck
          push: true
          tags: |
            onthertech/optimism.replica-healthcheck:${{ steps.extractver.outputs.GITSHA }}
            onthertech/optimism.replica-healthcheck:nightly
            onthertech/optimism.replica-healthcheck:nightly-${{ steps.extractver.outputs.VERSION }}

  proxyd:
    name: Publish proxyd
    runs-on: ubuntu-latest
    outputs:
      newVersion: ${{ steps.extractver.outputs.VERSION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_SECRET }}

      - name: Get version
        id: extractver
        run: |
          echo ::set-output name=VERSION::$(jq -r .version ./proxyd/package.json)
          echo ::set-output name=GITDATE::"$(date +%d-%m-%Y)"
          echo ::set-output name=GITSHA::"$GITHUB_SHA"

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./proxyd/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            onthertech/optimism.proxyd:${{ steps.extractver.outputs.GITSHA }}
            onthertech/optimism.proxyd:nightly
            onthertech/optimism.proxyd:nightly-${{ steps.extractver.outputs.VERSION }}
          build-args: |
            GITDATE=${{ steps.extractver.outputs.GITDATE }}
            GITCOMMIT=${{ steps.extractver.outputs.GITSHA }}
            GITVERSION=${{ steps.extractver.outputs.VERSION }}

  op-exporter:
    name: Publish op-exporter
    runs-on: ubuntu-latest
    outputs:
      newVersion: ${{ steps.extractver.outputs.VERSION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_SECRET }}

      - name: Get version
        id: extractver
        run: |
          echo ::set-output name=VERSION::$(jq -r .version ./op-exporter/package.json)
          echo ::set-output name=GITDATE::"$(date +%d-%m-%Y)"
          echo ::set-output name=GITSHA::"$GITHUB_SHA"

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./op-exporter/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            onthertech/optimism.op-exporter:${{ steps.extractver.outputs.GITSHA }}
            onthertech/optimism.op-exporter:nightly
            onthertech/optimism.op-exporter:nightly-${{ steps.extractver.outputs.VERSION }}
          build-args: |
            GITDATE=${{ steps.extractver.outputs.GITDATE }}
            GITCOMMIT=${{ steps.extractver.outputs.GITSHA }}
            GITVERSION=${{ steps.extractver.outputs.VERSION }}

  l2geth-exporter:
    name: Publish l2geth-exporter
    runs-on: ubuntu-latest
    outputs:
      newVersion: ${{ steps.extractver.outputs.VERSION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_SECRET }}

      - name: Get version
        id: extractver
        run: |
          echo ::set-output name=VERSION::$(jq -r .version ./l2geth-exporter/package.json)
          echo ::set-output name=GITDATE::"$(date +%d-%m-%Y)"
          echo ::set-output name=GITSHA::"$GITHUB_SHA"

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./l2geth-exporter/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            onthertech/optimism.l2geth-exporter:${{ steps.extractver.outputs.GITSHA }}
            onthertech/optimism.l2geth-exporter:nightly
            onthertech/optimism.l2geth-exporter:nightly-${{ steps.extractver.outputs.VERSION }}
          build-args: |
            GITDATE=${{ steps.extractver.outputs.GITDATE }}
            GITCOMMIT=${{ steps.extractver.outputs.GITSHA }}
            GITVERSION=${{ steps.extractver.outputs.VERSION }}

  batch-submitter-service:
    name: Publish batch-submitter-service
    runs-on: ubuntu-latest
    outputs:
      newVersion: ${{ steps.extractver.outputs.VERSION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Get version
        id: extractver
        run: |
          echo ::set-output name=VERSION::$(jq -r .version ./batch-submitter/package.json)
          echo ::set-output name=GITSHA::"$GITHUB_SHA"

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_SECRET }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./batch-submitter/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            onthertech/optimism.batch-submitter-service:${{ steps.extractver.outputs.GITSHA }}
            onthertech/optimism.batch-submitter-service:nightly
            onthertech/optimism.batch-submitter-service:nightly-${{ steps.extractver.outputs.VERSION }}

  indexer:
    name: Publish indexer
    runs-on: ubuntu-latest
    outputs:
      newVersion: ${{ steps.extractver.outputs.VERSION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_SECRET }}

      - name: Get version
        id: extractver
        run: |
          echo ::set-output name=VERSION::$(jq -r .version ./indexer/package.json)
          echo ::set-output name=GITDATE::"$(date +%d-%m-%Y)"
          echo ::set-output name=GITSHA::"$GITHUB_SHA"

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./indexer/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            onthertech/optimism.indexer:${{ steps.extractver.outputs.GITSHA }}
            onthertech/optimism.indexer:nightly
            onthertech/optimism.indexer:nightly-${{ steps.extractver.outputs.VERSION }}
          build-args: |
            GITDATE=${{ steps.extractver.outputs.GITDATE }}
            GITCOMMIT=${{ steps.extractver.outputs.GITSHA }}
            GITVERSION=${{ steps.extractver.outputs.VERSION }}

  teleportr:
    name: Publish Teleportr
    runs-on: ubuntu-latest
    outputs:
      newVersion: ${{ steps.extractver.outputs.VERSION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_SECRET }}

      - name: Get version
        id: extractver
        run: |
          echo ::set-output name=VERSION::$(jq -r .version ./teleportr/package.json)
          echo ::set-output name=GITDATE::"$(date +%d-%m-%Y)"
          echo ::set-output name=GITSHA::"$GITHUB_SHA"

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./teleportr/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            onthertech/optimism.teleportr:${{ steps.extractver.outputs.GITSHA }}
            onthertech/optimism.teleportr:nightly
            onthertech/optimism.teleportr:nightly-${{ steps.extractver.outputs.VERSION }}
          build-args: |
            GITDATE=${{ steps.extractver.outputs.GITDATE }}
            GITCOMMIT=${{ steps.extractver.outputs.GITSHA }}
            GITVERSION=${{ steps.extractver.outputs.VERSION }}

  update-kustomize:
    name: Update image version in kustomize manifest file
    needs:
      - l2geth
      - tokamak-message-relayer
      - data-transport-layer
      - batch-submitter-service
    runs-on: ubuntu-latest

    steps:
      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v1

      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: tokamak-network/tokamak-optimism-infra
          ref: main
          token: ${{ secrets.BOT_ACCESS_TOKEN }}
          path: tokamak-optimism-infra

      - name: Update l2geth Kubernetes resources
        run: |
            cd tokamak-optimism-infra/tokamak-optimism/kustomize/overlays/aws/goerli-nightly
            kustomize edit set image onthertech/optimism.l2geth:nightly-${{ needs.l2geth.outputs.newVersion }}

      - name: Update tokamak-message-relayer Kubernetes resources
        run: |
            cd tokamak-optimism-infra/tokamak-optimism/kustomize/overlays/aws/goerli-nightly
            kustomize edit set image onthertech/optimism.tokamak-message-relayer:nightly-${{ needs.tokamak-message-relayer.outputs.newVersion }}

      - name: Update data-transport-layer Kubernetes resources
        run: |
            cd tokamak-optimism-infra/tokamak-optimism/kustomize/overlays/aws/goerli-nightly
            kustomize edit set image onthertech/optimism.data-transport-layer:nightly-${{ needs.data-transport-layer.outputs.newVersion }}

      - name: Update batch-submitter-service Kubernetes resources
        run: |
            cd tokamak-optimism-infra/tokamak-optimism/kustomize/overlays/aws/goerli-nightly
            kustomize edit set image onthertech/optimism.batch-submitter-service:nightly-${{ needs.batch-submitter-service.outputs.newVersion }}

      - name: Show updated Kubernetes resources
        run: |
            cd tokamak-optimism-infra/tokamak-optimism/kustomize/overlays/aws/goerli-nightly
            cat kustomization.yaml

      - name: Commit and push changes
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          github_token: ${{ secrets.BOT_ACCESS_TOKEN }}
          message: '[AUTO] Update tokamak-optimism images tag for nightly'
          cwd: 'tokamak-optimism-infra/'
